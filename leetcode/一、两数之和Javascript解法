给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]

javascript解法：
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    // 利用hash表 60ms 34.6MB
    let map = new Map()
    let i, len, item
    for (i=0, len=nums.length; i<len; i++) {
        item = nums[i]
        if (map.has(item)) {
            return [map.get(item), i]
        } else {
            map.set(target - item, i)
        }
    }
    
    // 数组 260ms 33.7MB
    // for (let i=0, len = nums.length; i < len; i++) {
    //     let index = nums.indexOf(target - nums[i])
    //     if (index !== i && index > -1) {
    //         return [i, index]
    //     }
    // }
};