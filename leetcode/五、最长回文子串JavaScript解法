给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。

示例 1：

输入: "babad"
输出: "bab"
注意: "aba" 也是一个有效答案。
示例 2：

输入: "cbbd"
输出: "bb"

/**
 * @param {string} s
 * @return {string}
 */
 执行用时 :96 ms, 在所有 JavaScript 提交中击败了93.52%的用户
 内存消耗 :37.6 MB, 在所有 JavaScript 提交中击败了40.94%的用户
var longestPalindrome = function(s) {
    let arr = [NaN, null];
    for (let i=0; i<s.length; i++) {
        arr.push(s[i]);
        arr.push(null);
    }
    arr.push(NaN);
    
    let iCenterMax = 1
    let iCenter = 0
    let lens = []
    let iRight = 0
    
    for (let i=1; i<arr.length-1; i += 1) {
        if (arr.length-1-i <= lens[iCenterMax]) {
            break
        }
        
        lens[i] = 0;
        if (i < iRight) {
            let iMirror = 2 * iCenter - i;
            lens[i] = Math.min(iRight-i, lens[iMirror]);
        }
        while (arr[i+lens[i]+1] === arr[i-lens[i]-1]) {
            lens[i] += 1
        }
        if (i > lens[i] + iRight) {
            iCenter = i;
            iRight = i + lens[i]
        }
        if (lens[i] > lens[iCenterMax]) {
            iCenterMax = i
        }
    }
    return arr.slice(iCenterMax - lens[iCenterMax], iCenterMax + lens[iCenterMax] + 1).filter(item => item !== null).join('')
};